/* tslint:disable */
/* eslint-disable */
/**
 * Decentralized-Guild
 * About Decentralized Guild System APIs. Please use it when expanding the system.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ym.u.ichiro@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ChatRoomMemberFromJSON, ChatRoomMemberToJSON } from './ChatRoomMember';
import { ChatRoomMessageFromJSON, ChatRoomMessageToJSON } from './ChatRoomMessage';
/**
 * Check if a given object implements the ChatRoom interface.
 */
export function instanceOfChatRoom(value) {
    var isInstance = true;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'createdAt' in value;
    isInstance = isInstance && 'lastPostedUserId' in value;
    isInstance = isInstance && 'updatedAt' in value;
    isInstance = isInstance && 'isUnread' in value;
    isInstance = isInstance && 'messages' in value;
    isInstance = isInstance && 'members' in value;
    return isInstance;
}
export function ChatRoomFromJSON(json) {
    return ChatRoomFromJSONTyped(json, false);
}
export function ChatRoomFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json['id'],
        createdAt: new Date(json['createdAt']),
        lastPostedUserId: json['lastPostedUserId'],
        updatedAt: new Date(json['updatedAt']),
        isUnread: json['isUnread'],
        messages: json['messages'].map(ChatRoomMessageFromJSON),
        members: json['members'].map(ChatRoomMemberFromJSON),
    };
}
export function ChatRoomToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        createdAt: value.createdAt.toISOString(),
        lastPostedUserId: value.lastPostedUserId,
        updatedAt: value.updatedAt.toISOString(),
        isUnread: value.isUnread,
        messages: value.messages.map(ChatRoomMessageToJSON),
        members: value.members.map(ChatRoomMemberToJSON),
    };
}
