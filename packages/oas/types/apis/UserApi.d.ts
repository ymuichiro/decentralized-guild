/**
 * Decentralized-Guild
 * About Decentralized Guild System APIs. Please use it when expanding the system.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ym.u.ichiro@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetUsersResponseInner, PostUserVerifyRequestBody, PutUserRequestBody, User, WebPush } from '../models';
export interface DeleteUserRequest {
    userId: string;
}
export interface GetUserRequest {
    userId: string;
}
export interface GetUsersRequest {
    offset?: number;
}
export interface PostUserProfileImageRequest {
    userId: string;
    file: Blob;
}
export interface PostUserPublicKeyRequest {
    userId: string;
    postUserVerifyRequestBody: PostUserVerifyRequestBody;
}
export interface PostUserPushRequest {
    userId: string;
    webPush: WebPush;
}
export interface PutUserRequest {
    userId: string;
    putUserRequestBody: PutUserRequestBody;
}
/**
 *
 */
export declare class UserApi extends runtime.BaseAPI {
    /**
     * ユーザーの退会処理。パブリックキー情報はサーバー上に残置される。
     * delete current user
     */
    deleteUserRaw(requestParameters: DeleteUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * ユーザーの退会処理。パブリックキー情報はサーバー上に残置される。
     * delete current user
     */
    deleteUser(requestParameters: DeleteUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * ユーザー情報を取得する。SessionID と同一の場合のみ email 情報を返す。
     * get user info
     */
    getUserRaw(requestParameters: GetUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<User>>;
    /**
     * ユーザー情報を取得する。SessionID と同一の場合のみ email 情報を返す。
     * get user info
     */
    getUser(requestParameters: GetUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;
    /**
     * ユーザーの一覧を取得する
     * get users
     */
    getUsersRaw(requestParameters: GetUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetUsersResponseInner>>;
    /**
     * ユーザーの一覧を取得する
     * get users
     */
    getUsers(requestParameters?: GetUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetUsersResponseInner>;
    /**
     * ユーザーのプロフィールイメージを更新する
     * post user profile image
     */
    postUserProfileImageRaw(requestParameters: PostUserProfileImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * ユーザーのプロフィールイメージを更新する
     * post user profile image
     */
    postUserProfileImage(requestParameters: PostUserProfileImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * update user publickey after verified
     * post user public key & verify
     */
    postUserPublicKeyRaw(requestParameters: PostUserPublicKeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * update user publickey after verified
     * post user public key & verify
     */
    postUserPublicKey(requestParameters: PostUserPublicKeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * regist web push
     * regist web push
     */
    postUserPushRaw(requestParameters: PostUserPushRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * regist web push
     * regist web push
     */
    postUserPush(requestParameters: PostUserPushRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * ユーザーの情報を更新する。パブリックキー、プロフィールの更新は別APIにて定義する
     * put user info
     */
    putUserRaw(requestParameters: PutUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * ユーザーの情報を更新する。パブリックキー、プロフィールの更新は別APIにて定義する
     * put user info
     */
    putUser(requestParameters: PutUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
