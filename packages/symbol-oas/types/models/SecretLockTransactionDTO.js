/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LockHashAlgorithmEnumFromJSON, LockHashAlgorithmEnumToJSON, } from './LockHashAlgorithmEnum';
import { NetworkTypeEnumFromJSON, NetworkTypeEnumToJSON } from './NetworkTypeEnum';
/**
 * Check if a given object implements the SecretLockTransactionDTO interface.
 */
export function instanceOfSecretLockTransactionDTO(value) {
    var isInstance = true;
    isInstance = isInstance && 'size' in value;
    isInstance = isInstance && 'signature' in value;
    isInstance = isInstance && 'signerPublicKey' in value;
    isInstance = isInstance && 'version' in value;
    isInstance = isInstance && 'network' in value;
    isInstance = isInstance && 'type' in value;
    isInstance = isInstance && 'maxFee' in value;
    isInstance = isInstance && 'deadline' in value;
    isInstance = isInstance && 'recipientAddress' in value;
    isInstance = isInstance && 'secret' in value;
    isInstance = isInstance && 'mosaicId' in value;
    isInstance = isInstance && 'amount' in value;
    isInstance = isInstance && 'duration' in value;
    isInstance = isInstance && 'hashAlgorithm' in value;
    return isInstance;
}
export function SecretLockTransactionDTOFromJSON(json) {
    return SecretLockTransactionDTOFromJSONTyped(json, false);
}
export function SecretLockTransactionDTOFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        size: json['size'],
        signature: json['signature'],
        signerPublicKey: json['signerPublicKey'],
        version: json['version'],
        network: NetworkTypeEnumFromJSON(json['network']),
        type: json['type'],
        maxFee: json['maxFee'],
        deadline: json['deadline'],
        recipientAddress: json['recipientAddress'],
        secret: json['secret'],
        mosaicId: json['mosaicId'],
        amount: json['amount'],
        duration: json['duration'],
        hashAlgorithm: LockHashAlgorithmEnumFromJSON(json['hashAlgorithm']),
    };
}
export function SecretLockTransactionDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        size: value.size,
        signature: value.signature,
        signerPublicKey: value.signerPublicKey,
        version: value.version,
        network: NetworkTypeEnumToJSON(value.network),
        type: value.type,
        maxFee: value.maxFee,
        deadline: value.deadline,
        recipientAddress: value.recipientAddress,
        secret: value.secret,
        mosaicId: value.mosaicId,
        amount: value.amount,
        duration: value.duration,
        hashAlgorithm: LockHashAlgorithmEnumToJSON(value.hashAlgorithm),
    };
}
