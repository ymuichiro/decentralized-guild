/* tslint:disable */
/* eslint-disable */
/**
 * Decentralized-Guild
 * About Decentralized Guild System APIs. Please use it when expanding the system.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ym.u.ichiro@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebPushKeys } from './WebPushKeys';
import {
    WebPushKeysFromJSON,
    WebPushKeysFromJSONTyped,
    WebPushKeysToJSON,
} from './WebPushKeys';

/**
 * 
 * @export
 * @interface WebPush
 */
export interface WebPush {
    /**
     * 
     * @type {string}
     * @memberof WebPush
     */
    endpoint?: string;
    /**
     * 
     * @type {number}
     * @memberof WebPush
     */
    expirationTime?: number | null;
    /**
     * 
     * @type {WebPushKeys}
     * @memberof WebPush
     */
    keys?: WebPushKeys;
}

/**
 * Check if a given object implements the WebPush interface.
 */
export function instanceOfWebPush(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebPushFromJSON(json: any): WebPush {
    return WebPushFromJSONTyped(json, false);
}

export function WebPushFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebPush {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'endpoint': !exists(json, 'endpoint') ? undefined : json['endpoint'],
        'expirationTime': !exists(json, 'expirationTime') ? undefined : json['expirationTime'],
        'keys': !exists(json, 'keys') ? undefined : WebPushKeysFromJSON(json['keys']),
    };
}

export function WebPushToJSON(value?: WebPush | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'endpoint': value.endpoint,
        'expirationTime': value.expirationTime,
        'keys': WebPushKeysToJSON(value.keys),
    };
}

